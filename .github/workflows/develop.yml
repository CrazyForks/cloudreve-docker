name: Building Docker Image of Cloudreve for Development

on:
  push:
    branches:
      - develop

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Preparing Works
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/cloudreve
          SHORTREF=${GITHUB_SHA::8}
          TAGS="${DOCKER_IMAGE}:unstable,${DOCKER_IMAGE}:${SHORTREF}"
          # set output for tags and docker image
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@maste
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: ${{ steps.prep.outputs.tags }}


# name: Publish Docker
# on: 
#   push: 
#     branches:
#       - develop
# jobs:
#   latest-and-amd64:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@master
#       - name: DockerHub login
#         env: 
#           DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#         run: |
#           echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
#       - name: Set up docker buildx
#         id: buildx
#         uses: crazy-max/ghaction-docker-buildx@v1
#         with:
#           buildx-version: latest
#       - name: Build Dockerfile and push to DockerHub
#         run: |
#           REPO_NAME="xavierniu/cloudreve"
#           docker buildx build \
#             --platform linux/amd64 \
#             -t ${REPO_NAME}:unstable -t ${REPO_NAME}:unstable-${GITHUB_SHA} -t ${REPO_NAME}:unstable-amd64 -t ${REPO_NAME}:unstable-amd64-${GITHUB_SHA} \
#             --push \
#             . -f Dockerfile
#   arm64v8:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@master
#       - name: DockerHub login
#         env: 
#           DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#         run: |
#           echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
#       - name: Set up docker buildx
#         id: buildx
#         uses: crazy-max/ghaction-docker-buildx@v1
#         with:
#           buildx-version: latest
#       - name: Build Dockerfile and push to DockerHub
#         run: |
#           REPO_NAME="xavierniu/cloudreve"
#           docker buildx build \
#             --platform linux/arm64 \
#             -t ${REPO_NAME}:arm64v8-unstable -t ${REPO_NAME}:arm64v8-unstable-${GITHUB_SHA} \
#             --push \
#             . -f Dockerfile.aarch64
#   arm32v7:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@master
#       - name: DockerHub login
#         env: 
#           DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#         run: |
#           echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
#       - name: Set up docker buildx
#         id: buildx
#         uses: crazy-max/ghaction-docker-buildx@v1
#         with:
#           buildx-version: latest
#       - name: Build Dockerfile and push to DockerHub
#         run: |
#           REPO_NAME="xavierniu/cloudreve"
#           docker buildx build \
#             --platform linux/arm/v7 \
#             -t ${REPO_NAME}:arm32v7-unstable -t ${REPO_NAME}:arm32v7-unstable-${GITHUB_SHA} \
#             --push \
#             . -f Dockerfile.armhf